name: Publish Nuget package

on:
  release:
    types:
      - published # Run the workflow when a release is published

env:
  working-directory: ./Dapper.CustomTypeHandlers
  NuGetDirectory: ${{ github.workspace}}/nuget

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup .NET 7.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 7.0.x

      - name: Setup .NET 8.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Setup .NET 9.0.x
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
          
      - name: List installed .NET SDKs
        run: dotnet --list-sdks
        
      - name: Build the project
        run: dotnet build --configuration Release
        working-directory: ${{env.working-directory}}
        
      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal
        working-directory: ${{env.working-directory}}
        
      # Create the NuGet package in the folder from the environment variable NuGetDirectory
      - name: Pack the NuGet package
        run: dotnet pack ./Dapper.CustomTypeHandlers --configuration Release --no-build --output ${{env.NuGetDirectory}}
        working-directory: ${{env.working-directory}}
        
      # List the NuGet package
      - name: List the NuGet package
        run: ls ${{env.NuGetDirectory}}
        
      # Publish the NuGet package as an artifact, so it can be used in other workflows or in the following jobs
      - name: Publish the NuGet package as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget
          if-no-files-found: error
          retention-days: 7
          path: ${{env.NuGetDirectory}}/*.nupkg
          
  publish:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download the NuGet package
        uses: actions/download-artifact@v4
        with:
          name: nuget
          path: ${{ env.NuGetDirectory }}

      - name: List the NuGet package
        run: ls ${{env.NuGetDirectory}}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish the NuGet package
        run: |
          dotnet nuget push ${{env.NuGetDirectory}}/*.nupkg --api-key ${{ secrets.NUGET_APIKEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
